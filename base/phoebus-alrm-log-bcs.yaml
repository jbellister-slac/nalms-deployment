---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp:
  labels:
    io.kompose.service: phoebus-alrm-log-bcs
    app.kubernetes.io/name: phoebus-alarm-logger
    app.kubernetes.io/part-of: nalms
  name: phoebus-alrm-log-bcs
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: phoebus-alrm-log-bcs
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp:
      labels:
        io.kompose.service: phoebus-alrm-log-bcs
        app.kubernetes.io/name: phoebus-alarm-logger
        app.kubernetes.io/part-of: nalms
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values: [phoebus-alarm-logger]
                topologyKey: kubernetes.io/hostname
      containers:
        - args: [start-logger, nalms-bcs]
          env:
            - name: ALARM_LOGGER_PROPERTIES
              value: /opt/nalms/config/alarm_logger.properties
            - name: BOOTSTRAP_SERVERS
              value: nalms-kafka-bootstrap:9092
            - name: ES_HOST
              value: nalms-es-internal-http
            - name: ES_PORT
              value: '9200'
          image: tidacs/nalms-phoebus-alarm-logger:v1.4
          name: phoebus-alrm-log-bcs
          resources: {}
          volumeMounts:
            - mountPath: /opt/nalms/config/alarm_logger.properties
              name: nalms-configmap
              subPath: alarm_logger.properties
      restartPolicy: Always
      volumes:
        - configMap:
            items:
              - key: alarm_logger.properties
                path: alarm_logger.properties
            name: nalms-alarm-logger-configmap
          name: nalms-configmap
status: {}
